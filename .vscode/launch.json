{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Build without Debug",
            "type": "cppdbg",
            "request": "launch",
            "program":  "${command:cmake.launchTargetPath}", // Adjust to your executable's name
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Project" // Use the CMake Tools build task
        },
        {
            "name": "Debug with ST-Link",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "runToEntryPoint": "main",
            "showDevDebugOutput": "raw",
            "servertype": "stlink",
            "armToolchainPath": "",
            "liveWatch": {
                "enabled": true,
                "samplesPerSecond": 4
            }
        },
        {
            "name": "Attach with ST-Link",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "attach",
            "type": "cortex-debug",
            "showDevDebugOutput": "raw",
            "servertype": "stlink",
            "armToolchainPath": "",
            "liveWatch": {
                "enabled": true,
                "samplesPerSecond": 4
            }
        },
        { //TODO: Update OpenOCD configuration for XRTOS debugging
            "name": "Debug with OpenOCD",
            "cwd": "${workspaceRoot}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "configFiles": [
                "openocd.cfg"
            ],
            "runToEntryPoint": "main",
            "showDevDebugOutput": "raw",
            "armToolchainPath": "",
            "gdbPath": "gdb",
            "serverpath": "openocd",
            "liveWatch": {
                "enabled": true,
                "samplesPerSecond": 4
            }
        },
        {
            "name": "C/C++: g++.exe build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}\\${fileBasenameNoExtension}.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "C:\\msys64\\ucrt64\\bin\\gdb.exe",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "C/C++: g++.exe build active file"
        },
        {
            "name": "Server Debug",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/Build/Tests/run_tests", // Ensure this path is correct
            "args": [],
            "stopAtEntry": false, // Change to true if you want the debugger to stop at the entry point
            "cwd": "${workspaceFolder}",
            "environment": [], // Add any necessary environment variables here
            "externalConsole": false, // Set to true if you need an external console
            "MIMode": "gdb",
            "miDebuggerPath": "C:\\msys64\\ucrt64\\bin\\gdb.exe", // Ensure this path is correct
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build and Test with Mocks" // Ensure this task is defined in tasks.json
        }
        
    ]
}
